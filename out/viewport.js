// viewport.js
//
// Copyright Charles Dick 2020
import { transformTranslateCreate, transformStretch, transformTranslate, transformInvert } from './transform';
// Viewport keeps track of world <-> screen coordinates
// World coordinates are +x -> right, +y -> up
export class Viewport {
    constructor(ctx, pos, scale) {
        this.ctx = ctx;
        this.pos = pos;
        this.scale = scale;
        this.w2s = this.computeWorldToScreen();
        this.s2w = transformInvert(this.w2s);
    }
    computeWorldToScreen() {
        const canvas = this.ctx.canvas;
        const width = canvas.width;
        const height = canvas.height;
        let s2w = transformTranslateCreate(-width * 0.5, -height * 0.5);
        s2w = transformStretch(s2w, this.scale, -this.scale);
        s2w = transformTranslate(s2w, -this.pos[0], -this.pos[1]);
        return s2w;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmlld3BvcnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvdmlld3BvcnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsY0FBYztBQUNkLEVBQUU7QUFDRiw4QkFBOEI7QUFDOUIsT0FBTyxFQUFvQix3QkFBd0IsRUFBRSxnQkFBZ0IsRUFBRSxrQkFBa0IsRUFBRSxlQUFlLEVBQUMsTUFBTSxhQUFhLENBQUM7QUFFL0gsdURBQXVEO0FBQ3ZELDhDQUE4QztBQUM5QyxNQUFNLE9BQU8sUUFBUTtJQW9CakIsWUFBWSxHQUE2QixFQUFFLEdBQVksRUFBRSxLQUFhO1FBQ2xFLElBQUksQ0FBQyxHQUFHLEdBQUcsR0FBRyxDQUFDO1FBQ2YsSUFBSSxDQUFDLEdBQUcsR0FBRyxHQUFHLENBQUM7UUFDZixJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztRQUNuQixJQUFJLENBQUMsR0FBRyxHQUFHLElBQUksQ0FBQyxvQkFBb0IsRUFBRSxDQUFDO1FBQ3ZDLElBQUksQ0FBQyxHQUFHLEdBQUcsZUFBZSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUN6QyxDQUFDO0lBaEJPLG9CQUFvQjtRQUN4QixNQUFNLE1BQU0sR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQztRQUMvQixNQUFNLEtBQUssR0FBRyxNQUFNLENBQUMsS0FBSyxDQUFDO1FBQzNCLE1BQU0sTUFBTSxHQUFHLE1BQU0sQ0FBQyxNQUFNLENBQUM7UUFDN0IsSUFBSSxHQUFHLEdBQUcsd0JBQXdCLENBQUMsQ0FBQyxLQUFLLEdBQUcsR0FBRyxFQUFFLENBQUMsTUFBTSxHQUFHLEdBQUcsQ0FBQyxDQUFDO1FBQ2hFLEdBQUcsR0FBRyxnQkFBZ0IsQ0FBQyxHQUFHLEVBQUUsSUFBSSxDQUFDLEtBQUssRUFBRSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUNyRCxHQUFHLEdBQUcsa0JBQWtCLENBQUMsR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUMxRCxPQUFPLEdBQUcsQ0FBQztJQUNmLENBQUM7Q0FVSiIsInNvdXJjZXNDb250ZW50IjpbIi8vIHZpZXdwb3J0LmpzXG4vL1xuLy8gQ29weXJpZ2h0IENoYXJsZXMgRGljayAyMDIwXG5pbXBvcnQge0FmZmluZTJELCBQb2ludDJELCB0cmFuc2Zvcm1UcmFuc2xhdGVDcmVhdGUsIHRyYW5zZm9ybVN0cmV0Y2gsIHRyYW5zZm9ybVRyYW5zbGF0ZSwgdHJhbnNmb3JtSW52ZXJ0fSBmcm9tICcuL3RyYW5zZm9ybSc7XG5cbi8vIFZpZXdwb3J0IGtlZXBzIHRyYWNrIG9mIHdvcmxkIDwtPiBzY3JlZW4gY29vcmRpbmF0ZXNcbi8vIFdvcmxkIGNvb3JkaW5hdGVzIGFyZSAreCAtPiByaWdodCwgK3kgLT4gdXBcbmV4cG9ydCBjbGFzcyBWaWV3cG9ydCB7XG4gICAgcHJpdmF0ZSBjdHg6IENhbnZhc1JlbmRlcmluZ0NvbnRleHQyRDtcbiAgICBwcml2YXRlIHBvczogUG9pbnQyRDtcbiAgICBwcml2YXRlIHNjYWxlOiBudW1iZXI7XG4gICAgLy8gVE9ETzogYm91bmRpbmcgYm94IGZvciB3b3JsZFxuICAgIC8vIFRPRE86IGZpZ3VyZSBvdXQgdG91Y2ggZXZlbnRzXG4gICAgLy8gVE9ETzogZmlndXJlIG91dCBob3cvd2hlbiBkcmF3aW5nIGhhcHBlbnNcbiAgICB3MnM6IEFmZmluZTJEO1xuICAgIHMydzogQWZmaW5lMkQ7XG5cbiAgICBwcml2YXRlIGNvbXB1dGVXb3JsZFRvU2NyZWVuKCk6IEFmZmluZTJEIHtcbiAgICAgICAgY29uc3QgY2FudmFzID0gdGhpcy5jdHguY2FudmFzO1xuICAgICAgICBjb25zdCB3aWR0aCA9IGNhbnZhcy53aWR0aDtcbiAgICAgICAgY29uc3QgaGVpZ2h0ID0gY2FudmFzLmhlaWdodDtcbiAgICAgICAgbGV0IHMydyA9IHRyYW5zZm9ybVRyYW5zbGF0ZUNyZWF0ZSgtd2lkdGggKiAwLjUsIC1oZWlnaHQgKiAwLjUpO1xuICAgICAgICBzMncgPSB0cmFuc2Zvcm1TdHJldGNoKHMydywgdGhpcy5zY2FsZSwgLXRoaXMuc2NhbGUpO1xuICAgICAgICBzMncgPSB0cmFuc2Zvcm1UcmFuc2xhdGUoczJ3LCAtdGhpcy5wb3NbMF0sIC10aGlzLnBvc1sxXSk7XG4gICAgICAgIHJldHVybiBzMnc7XG4gICAgfVxuXG4gICAgY29uc3RydWN0b3IoY3R4OiBDYW52YXNSZW5kZXJpbmdDb250ZXh0MkQsIHBvczogUG9pbnQyRCwgc2NhbGU6IG51bWJlcikge1xuICAgICAgICB0aGlzLmN0eCA9IGN0eDtcbiAgICAgICAgdGhpcy5wb3MgPSBwb3M7XG4gICAgICAgIHRoaXMuc2NhbGUgPSBzY2FsZTtcbiAgICAgICAgdGhpcy53MnMgPSB0aGlzLmNvbXB1dGVXb3JsZFRvU2NyZWVuKCk7XG4gICAgICAgIHRoaXMuczJ3ID0gdHJhbnNmb3JtSW52ZXJ0KHRoaXMudzJzKTtcbiAgICB9XG5cbn1cbiJdfQ==