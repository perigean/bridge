// Copyright Charles Dueck 2020
;
;
;
;
;
export function resizeFloat32Array(a, length) {
    if (a === undefined)
        return new Float32Array(length);
    if (a.length === length)
        return a;
    const buffer = a.buffer;
    const byteLength = length * Float32Array.BYTES_PER_ELEMENT;
    if (buffer.byteLength < byteLength) {
        // Allocate extra bytes, to the next power of 2, to reduce reallocations.
        const newByteLength = Math.pow(2, Math.ceil(Math.log2(byteLength + 1)));
        const newBuffer = new ArrayBuffer(newByteLength);
        const newA = new Float32Array(newBuffer, 0, length);
        newA.set(a);
        return newA;
    }
    // TODO: else if for shrinking buffer? Probably don't ever need to.
    // NB: re-using the same ArrayBuffer, so we don't need to copy any values.
    return new Float32Array(buffer, 0, length);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib2RlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL29kZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSwrQkFBK0I7QUFJOUIsQ0FBQztBQUlELENBQUM7QUFNRCxDQUFDO0FBSUQsQ0FBQztBQU1ELENBQUM7QUFFRixNQUFNLFVBQVUsa0JBQWtCLENBQUMsQ0FBMkIsRUFBRSxNQUFjO0lBQzFFLElBQUksQ0FBQyxLQUFLLFNBQVM7UUFBRSxPQUFPLElBQUksWUFBWSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQ3JELElBQUksQ0FBQyxDQUFDLE1BQU0sS0FBSyxNQUFNO1FBQUUsT0FBTyxDQUFDLENBQUM7SUFDbEMsTUFBTSxNQUFNLEdBQUcsQ0FBQyxDQUFDLE1BQU0sQ0FBQztJQUN4QixNQUFNLFVBQVUsR0FBRyxNQUFNLEdBQUcsWUFBWSxDQUFDLGlCQUFpQixDQUFDO0lBQzNELElBQUksTUFBTSxDQUFDLFVBQVUsR0FBRyxVQUFVLEVBQUU7UUFDaEMseUVBQXlFO1FBQ3pFLE1BQU0sYUFBYSxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxVQUFVLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ3hFLE1BQU0sU0FBUyxHQUFHLElBQUksV0FBVyxDQUFDLGFBQWEsQ0FBQyxDQUFDO1FBQ2pELE1BQU0sSUFBSSxHQUFHLElBQUksWUFBWSxDQUFDLFNBQVMsRUFBRSxDQUFDLEVBQUUsTUFBTSxDQUFDLENBQUM7UUFDcEQsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUNaLE9BQU8sSUFBSSxDQUFDO0tBQ2Y7SUFDRCxtRUFBbUU7SUFFbkUsMEVBQTBFO0lBQzFFLE9BQU8sSUFBSSxZQUFZLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRSxNQUFNLENBQUMsQ0FBQztBQUMvQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IENoYXJsZXMgRHVlY2sgMjAyMFxuXG5leHBvcnQgaW50ZXJmYWNlIERlcml2YXRpdmUge1xuICAgICh0OiBudW1iZXIsIHk6IEZsb2F0MzJBcnJheSwgZHlkdDogRmxvYXQzMkFycmF5KTogdm9pZDtcbn07XG5cbmV4cG9ydCBpbnRlcmZhY2UgT0RFQ3RvciB7XG4gICAgbmV3ICh5OiBGbG9hdDMyQXJyYXksIGRlcml2YXRpdmU6IERlcml2YXRpdmUpOiBPREVNZXRob2Q7XG59O1xuXG5leHBvcnQgaW50ZXJmYWNlIE9ERU1ldGhvZCB7XG4gICAgcmVhZG9ubHkgdDogbnVtYmVyO1xuICAgIHJlYWRvbmx5IHk6IEZsb2F0MzJBcnJheTtcbiAgICBuZXh0KGg6IG51bWJlcik6IHZvaWQ7XG59O1xuXG5leHBvcnQgaW50ZXJmYWNlIER5bmFtaWNPREVDdG9yPFN0YXRlPiB7XG4gICAgbmV3ICh5OiBGbG9hdDMyQXJyYXksIGRlcml2YXRpdmU6IERlcml2YXRpdmUpOiBEeW5hbWljT0RFTWV0aG9kPFN0YXRlPjtcbn07XG5cbmV4cG9ydCBpbnRlcmZhY2UgRHluYW1pY09ERU1ldGhvZDxTdGF0ZT4gZXh0ZW5kcyBPREVNZXRob2Qge1xuICAgIHNhdmUoKTogU3RhdGU7XG4gICAgcmVzdG9yZSh0OiBudW1iZXIsIHM6IFN0YXRlKTogdm9pZDtcbiAgICBhZGQoLi4ueXM6IG51bWJlcltdKTogdm9pZDtcbn07XG5cbmV4cG9ydCBmdW5jdGlvbiByZXNpemVGbG9hdDMyQXJyYXkoYTogRmxvYXQzMkFycmF5IHwgdW5kZWZpbmVkLCBsZW5ndGg6IG51bWJlcik6IEZsb2F0MzJBcnJheSB7XG4gICAgaWYgKGEgPT09IHVuZGVmaW5lZCkgcmV0dXJuIG5ldyBGbG9hdDMyQXJyYXkobGVuZ3RoKTtcbiAgICBpZiAoYS5sZW5ndGggPT09IGxlbmd0aCkgcmV0dXJuIGE7XG4gICAgY29uc3QgYnVmZmVyID0gYS5idWZmZXI7XG4gICAgY29uc3QgYnl0ZUxlbmd0aCA9IGxlbmd0aCAqIEZsb2F0MzJBcnJheS5CWVRFU19QRVJfRUxFTUVOVDtcbiAgICBpZiAoYnVmZmVyLmJ5dGVMZW5ndGggPCBieXRlTGVuZ3RoKSB7XG4gICAgICAgIC8vIEFsbG9jYXRlIGV4dHJhIGJ5dGVzLCB0byB0aGUgbmV4dCBwb3dlciBvZiAyLCB0byByZWR1Y2UgcmVhbGxvY2F0aW9ucy5cbiAgICAgICAgY29uc3QgbmV3Qnl0ZUxlbmd0aCA9IE1hdGgucG93KDIsIE1hdGguY2VpbChNYXRoLmxvZzIoYnl0ZUxlbmd0aCArIDEpKSk7XG4gICAgICAgIGNvbnN0IG5ld0J1ZmZlciA9IG5ldyBBcnJheUJ1ZmZlcihuZXdCeXRlTGVuZ3RoKTtcbiAgICAgICAgY29uc3QgbmV3QSA9IG5ldyBGbG9hdDMyQXJyYXkobmV3QnVmZmVyLCAwLCBsZW5ndGgpO1xuICAgICAgICBuZXdBLnNldChhKTtcbiAgICAgICAgcmV0dXJuIG5ld0E7XG4gICAgfVxuICAgIC8vIFRPRE86IGVsc2UgaWYgZm9yIHNocmlua2luZyBidWZmZXI/IFByb2JhYmx5IGRvbid0IGV2ZXIgbmVlZCB0by5cblxuICAgIC8vIE5COiByZS11c2luZyB0aGUgc2FtZSBBcnJheUJ1ZmZlciwgc28gd2UgZG9uJ3QgbmVlZCB0byBjb3B5IGFueSB2YWx1ZXMuXG4gICAgcmV0dXJuIG5ldyBGbG9hdDMyQXJyYXkoYnVmZmVyLCAwLCBsZW5ndGgpO1xufVxuIl19